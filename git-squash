#!/bin/bash
# Author: Joel Nothman

usage() {
	echo Usage: $0 '[-m <commit msg>] <base>'
	exit 1
}

unset base
unset message

while [ -n "$1" ]
do
	case "$1" in
		-h)
			usage
			;;
		-m)
			shift
			if [ -z "$1" ]
			then
				echo '-m requires an argument' >&2
				usage
			fi

			if [ -n "$message" ]
			then
				message+=$'\n\n'"$1"
			else
				message="$1"
			fi
			;;
		*)
			if [ -z "$base" ]
			then
				base="$1"
			else
				echo 'Multiple bases specified' >&2
				usage
			fi
	esac
	shift
done
if [ -z "$base" ]
then
	echo 'No base ref provided' >&2
	usage
fi

ed_dir=$(mktemp -d -t squash_ed) &&
ed_path="$ed_dir/squash_ed" &&
normal_ed="$EDITOR" &&
echo '#!'$(which bash)'
has_message='$([ -n "$message" ] && echo 1)'

if grep -q "^# Rebase .* onto " "$1"
then
	echo Squashing... >&2
	tmp="$(mktemp -t squash_out)"
	awk '"'"'NR != 1 { sub(/^pick/, "squash") } {print}'"'"' "$1" > "$tmp"
	mv "$tmp" "$1"
elif [ -n "$has_message" ] && head -n1 "$1" | grep -q "^# This is a combination of"
then
	echo "[Temporary commit message]" > "$1"
else
	echo Launching '$normal_ed'... >&2
	"'$normal_ed'" "$1"
	exit $?
fi
' > $ed_path &&
chmod +x $ed_path &&

echo 'Warning: Forgetting local history. To revert, use:
  $ git reset --hard' $(git rev-parse --short HEAD) >&2
EDITOR=$ed_path git rebase -i $base &&
if [ -n "$message" ]
then
	# in case of only one commit, still fix message
	git commit --amend -m "$message" | head -n1
fi
rm -r $ed_dir

